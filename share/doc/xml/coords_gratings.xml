<?xml version="1.0"?>
<!DOCTYPE cxchelptopics SYSTEM "CXCHelp.dtd" [
 <!ENTITY pr '&gt;&gt;&gt;'>
]>
<cxchelptopics>
  <ENTRY key="coords_gratings" context="contrib"
         refkeywords="coord coordinate coordinate coords convert
		      gratings tg HETG HEG MEG LETG LEG TG_R TG_D dispersion
              cross crossdispersion sky zero zeroorder order"
         seealsogroups="contrib.coords">

    <SYNOPSIS>
      Object to convert to/from Chandra grating coordinates.
    </SYNOPSIS>

    <SYNTAX>
      <LINE>from coords.gratings import TGPixlib</LINE>
    </SYNTAX>

  <DESC>
    <PARA>
        This module provides an object, TGPixlib, that can be used to
        convert between sky coordinates and grating coordinates: 
        dispersion plus cross-dispersion angles and energy.  It can also be
        used to convert from energy to sky coordinates.
    </PARA>

    <PARA>
      See <HREF link="https://cxc.harvard.edu/ciao/ahelp/coords.html">ahelp coords</HREF> for more information on
      the Chandra coordinate systems.
    </PARA>

    <PARA title="Keyword values">
        The input to the constructor is a dictionary of header keywords.  One
        way to get this is using the following code snipet.
    </PARA>
<VERBATIM>
&pr; from pycrates import read_file
&pr; cr = read_file(infile)
&pr; keywords = {n: cr.get_key_value(n) for n in cr.get_keynames()}
</VERBATIM>


     <PARA title="Zero Order Location">
      Most of the routines also require the user supply the zero-order
      location, in sky coordinates (physical pixels).  The easiest way to
      get this is to look at the "REGION" extension in the Level2 event 
      file.  The row with shape="CIRCLE" is the zeroth order location.      
     </PARA>
<VERBATIM>
&pr; from pycrates import read_file
&pr; cr = read_file(infile+"[REGION][shape=circle]")
&pr; x0 = cr.get_column("x").values[0]
&pr; y0 = cr.get_column("y").values[0]
&pr; zero_order = (x0, y0)
</VERBATIM>
  
  

  </DESC>

  <QEXAMPLELIST>
    <QEXAMPLE>
      <SYNTAX>
<LINE>&pr; from coords.gratings import TGPixlib</LINE>
<LINE>&pr; tg_coords = TGPixlib(keys)</LINE>
<LINE>&pr; sky = (3976, 4296)</LINE>
<LINE>&pr; tg_r,tg_d = tg_coords.sky_to_grating_angles(sky, "heg", 1, zero_order)</LINE>
<LINE>&pr; tg_r,tg_d</LINE>
<LINE>(-0.04148751081946563, -0.0005054652107781537)</LINE>
      </SYNTAX>
      <DESC>
      <PARA>
        This example shows how to convert from sky coordinates (physical pixels)
        to grating angular coordinates, tg_r and tg_d: the dispersion and cross dispersion angles.
      </PARA>
      <PARA>
        As this is an HETG observations, users can select either "heg" or "meg".  If users
        use "hetg" for the grating arm, "heg" will be used.  For LETG observations, either
        "letg" or "leg" produce the same results.
      </PARA>
      </DESC>
    </QEXAMPLE>
  
    <QEXAMPLE>
      <SYNTAX>
<LINE>&pr; energy = tg_coords.sky_to_grating_energy(sky, "heg", 1, zero_order)
</LINE>
      </SYNTAX>
      <DESC>
      <PARA>
        This example builds on the previous one and computes the grating energy; that is
        what energy photons are dispersed to this sky location for this grating ("heg") and
        order ("1").
      </PARA>
      </DESC>
    </QEXAMPLE>
  </QEXAMPLELIST>


    <ADESC title="About Contributed Software">
      <PARA>
        This module is not an official part of the CIAO release but is
        made available as "contributed" software via the
        <HREF link="https://cxc.harvard.edu/ciao/download/scripts/">CIAO scripts page</HREF>.
        Please see this page for installation instructions.
      </PARA>
    </ADESC>

    <LASTMODIFIED>December 2022</LASTMODIFIED>
  </ENTRY>
</cxchelptopics>

