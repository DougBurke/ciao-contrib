<?xml version="1.0"?>
<!DOCTYPE cxchelptopics SYSTEM "CXCHelp.dtd" [
  <!ENTITY pr  '>>>'>
]>
<cxchelptopics>
  <ENTRY key="coords_utils" context="contrib"
         refkeywords="coord coordinate coordinate coords
                      slalib convert separation
		      position pos ra dec long longitude lat latitude
                      point_separation angular_separation bearing
                      spherical_to_cartesian cartesian_to_spherical
                      calculate_nominal_position degtorad radtodeg
		      coords.utils"
	 seealsogroups="contrib.coords">

    <SYNOPSIS>
      Utility routines for working with Astronomical positions.
    </SYNOPSIS>

    <SYNTAX>
      <LINE>from coords.utils import point_separation</LINE>
      <LINE>sep = point_separation(long1, lat1, long2, lat2)</LINE>
      <LINE/>
      <LINE>sep, long&lt;n&gt;, and lat&lt;n&gt; are in degrees.</LINE>
      <LINE/>
      <LINE>The Python help command - e.g. help(point_separation) - can be used.</LINE>
    </SYNTAX>

    <DESC>
      <PARA>
        The coords.utils module contains routines for working with Astronomical
        positions, based on the Starlink SLALIB module, and the
        <HREF link="https://github.com/scottransom/pyslalib/">Python conversion, pyslalib, by Scott Ransom</HREF>.
        At present only one routine is exported by the module, but
        a number of routines are also available - use help(coords.utils)
        to see what is available. These routines are not exported since
        their interface is not guaranteed to be stable.
      </PARA>

      <PARA title="Loading the routines">
	The module can be loaded into a Python session or script by saying:
      </PARA>

<VERBATIM>
import coords_utils
</VERBATIM>

      <PARA>
	or
      </PARA>

<VERBATIM>
from coords.utils import point_separation
</VERBATIM>

    </DESC>

    <QEXAMPLELIST>
      <QEXAMPLE>
	<SYNTAX>
	  <LINE>&pr; from coords.utils import point_separation</LINE>
	  <LINE>&pr; sep = point_separation(8.80125, -43.35556, 8.815, -43.566)</LINE>
          <LINE>&pr; print("Separation = {:.2f} arcmin".format(sep * 60))</LINE>
          <LINE>Separation = 12.64 arcmin</LINE>
	</SYNTAX>
	<DESC>
	  <PARA>
            The return value from point_separation is in degrees, so we convert
            it to arcminutes before printing it out.
	  </PARA>
	</DESC>
      </QEXAMPLE>

    </QEXAMPLELIST>

    <ADESC title="Changes in the scripts 4.5.4 (August 2013) release">
      <PARA>
	Documentation for the coords.utils module is new in this release.
      </PARA>
    </ADESC>

    <ADESC title="About Contributed Software">
      <PARA>
        This module is not an official part of the CIAO release but is
        made available as "contributed" software via the
        <HREF link="https://cxc.harvard.edu/ciao/download/scripts/">CIAO scripts page</HREF>.
        Please see this page for installation instructions.
      </PARA>
    </ADESC>

    <LASTMODIFIED>June 2019</LASTMODIFIED>

  </ENTRY>
</cxchelptopics>
