<?xml version="1.0"?>
<!DOCTYPE cxchelptopics SYSTEM "CXCHelp.dtd" [
  <!ENTITY pr  'chips>'>
]>
<cxchelptopics>
  <ENTRY key="coords_format" context="contrib"
         refkeywords="coord coordinate coordinate coords
		      position pos ra dec
                      format sexagesimal sexagessimal decimal number numeric string
                      hour degree arcmin arcsec
                      sex2deg sextodeg sex2degree sextodegree
		      ra2deg ratodeg ra2degree ratodegree
		      dec2deg dectodeg dec2degree dectodegree
		      deg2ra degtora degree2ra degreetora
		      deg2dec degtodec degree2dec degreetodec
		      coords.format"
	 seealsogroups="contrib.coords">

    <SYNOPSIS>
      Convert between string and numeric formats for Astronomical positions.
    </SYNOPSIS>

    <SYNTAX>
      <LINE>from coords.format import *</LINE>
      <LINE>(rad, decd) = sex2deg(ras, decs)</LINE>
      <LINE>rad = ra2deg(ras)</LINE>
      <LINE>decd = dec2deg(decs)</LINE>
      <LINE>ras = deg2ra(rad, fmt)</LINE>
      <LINE>decs = deg2dec(decd, fmt)</LINE>
      <LINE/>
      <LINE>rad and decd are in decimal degrees, ras and decs are strings.</LINE>
      <LINE>fmt is a string and can be one of: " ", "space", ":", "colon", and then
            either "hms", "HMS", "hour" or "dms", "degree" for deg2ra() and deg2dec()
            respectively</LINE>
      <LINE/>
      <LINE>The Python help command - e.g. help(deg2ra) - can be used.</LINE>
    </SYNTAX>

    <DESC>
      <PARA>
        The coords.format module contains 5 routines for converting between
        string and numeric formats for Astronomical positions.
      </PARA>

      <PARA title="Loading the routines">
	The routines can be loaded into a Python session or script by saying:
      </PARA>

<VERBATIM>
from coords.format import *
</VERBATIM>

    </DESC>

    <QEXAMPLELIST>
      <QEXAMPLE>
	<SYNTAX>
	  <LINE>&pr; from coords.format import *</LINE>
	  <LINE>&pr; (ra, dec) = (101.28854, -16.71314)</LINE>
          <LINE>&pr; def doit1(fmt): print("Format={} ra={}".format(fmt, deg2ra(ra,fmt)))</LINE>
          <LINE>&pr; for fmt in [" ", ":", "hms", "HMS", "hour"]: doit1(fmt)</LINE>
          <LINE>Format=  ra=6 45 9.2496</LINE>
          <LINE>Format=: ra=6:45:9.2496</LINE>
          <LINE>Format=hms ra=6h 45m 9.2496s</LINE>
          <LINE>Format=HMS ra=6H 45M 9.2496S</LINE>
          <LINE>Format=hour ra=6.75256933333h</LINE>
          <LINE>&pr; def doit2(fmt): print("Format={} dec={}".format(fmt, deg2dec(dec,fmt)))</LINE>
          <LINE>&pr; for fmt in [" ", ":", "dms", "degree"]: doit2(fmt)</LINE>
          <LINE>Format=  dec=-16 42 47.304</LINE>
          <LINE>Format=: dec=-16:42:47.304</LINE>
          <LINE>Format=dms dec=-16d 42' 47.304"</LINE>
          <LINE>Format=degree dec=-16.71314d</LINE>
	</SYNTAX>
	<DESC>
	  <PARA>
            The deg2ra() and deg2dec() routines are used to convert decimal values
            into strings, showing the various different formatting options.
	  </PARA>
	</DESC>
      </QEXAMPLE>

      <QEXAMPLE>
	<SYNTAX>
          <LINE>&pr; print(ra2deg('6:45:9.2496'))</LINE>
          <LINE>101.28854</LINE>
          <LINE>&pr; print(dec2deg('-16d 42\' 47.304"'))</LINE>
          <LINE>-16.71314</LINE>
	</SYNTAX>
	<DESC>
	  <PARA>
            Here we convert a string value into a decimal position.
	  </PARA>
	</DESC>
      </QEXAMPLE>

    </QEXAMPLELIST>

    <ADESC title="Changes in the scripts 4.8.1 (December 2015) release">
      <PARA>
        The code has been updated to avoid warning messages from
        NumPy version 1.9. There is no difference to how the
        script behaves.
      </PARA>
    </ADESC>
    
    <ADESC title="Changes in the scripts 4.5.5 (October 2013) release">
      <PARA>
	The deg2dec routine now correctly handles small negative declinations;
	that is it now correctly converts the following
      </PARA>
      <PARA>
	<SYNTAX>
	  <LINE>&pr; print(deg2dec(-0.00138888888889, ':'))</LINE>
	  <LINE>-0:0:5.0</LINE>
	</SYNTAX>
      </PARA>
    </ADESC>

    <ADESC title="Changes in the scripts 4.5.4 (August 2013) release">
      <PARA>
	Documentation for the coords.format module is new in this release.
      </PARA>
    </ADESC>

    <ADESC title="About Contributed Software">
      <PARA>
        This module is not an official part of the CIAO release but is
        made available as "contributed" software via the
        <HREF link="https://cxc.harvard.edu/ciao/download/scripts/">CIAO scripts page</HREF>.
        Please see this page for installation instructions.
      </PARA>
    </ADESC>

    <LASTMODIFIED>November 2015</LASTMODIFIED>

  </ENTRY>
</cxchelptopics>
