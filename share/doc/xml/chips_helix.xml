<?xml version="1.0"?>
<!DOCTYPE cxchelptopics SYSTEM "CXCHelp.dtd" [
  <!ENTITY pr  'chips>'>
]>
<cxchelptopics>
  <ENTRY key="chips_helix" context="contrib" pkg="chips"
	 refkeywords="chips_cubehelix helix cubehelix colormap lut lookup lookuptable table
		      color colour map load
		      load_colormap_helix load_colormap_cubehelix load_helix load_colormaphelix
		      get_cubehelix get_helix cubehelix0 cubehelix1
		      python"
	 displayseealsogroups=""
	 seealsogroups="ch.image">

    <SYNOPSIS>
      Load the Cube Helix colormap into ChIPS
    </SYNOPSIS>

    <SYNTAX>
      <LINE>import chips_contrib.helix as helix</LINE>
      <LINE>helix.load_colormap_cubehelix()</LINE>
      <LINE>helix.get_cubehelix()</LINE>
    </SYNTAX>

    <DESC>
      <PARA>
        This module provides routines to create a
	<HREF link="http://adsabs.harvard.edu/abs/2011BASI...39..289G">Cube Helix colormap</HREF>,
	usable in ChIPS.
	These color maps are designed to produce a set of
	colors with monotonically-increasing brightness,
	both on screen and when printed on a grayscale printer.
      </PARA>

      <PARA title="Loading the routines">
        The module can be loaded into ChIPS, Sherpa or Python
	scripts by saying:
      </PARA>

<VERBATIM>
import chips_contrib.helix as helix
</VERBATIM>

      <PARA title="Contents">
	This module currenly provides two routines: 
	load_colormap_cubehelix and get_cubehelix.
      </PARA>

      <TABLE>
	<ROW><DATA>Routine</DATA><DATA>Overview</DATA></ROW>
        <ROW>
	  <DATA>load_colormap_cubehelix</DATA>
	  <DATA>
	    Load the Cube Helix colors cheme into the ChIPS colormap
	    slot (one of chips_usercmap1, chips_usercmap2, or chips_usercmap3).
	    If not given, defaults to chips_usercmap1.
	  </DATA>
	</ROW>
        <ROW>
	  <DATA>get_cubehelix</DATA>
	  <DATA>
	    Returns the red, green, and blue components for the Cube Helix
	    color scheme (values are int he range 0 to 1, inclusive).
	  </DATA>
	</ROW>
      </TABLE>

      <PARA>
	Use the Python help system for more information on these commands:
      </PARA>

      <PARA>
	<SYNTAX>
	  <LINE>&pr; help(helix.load_colormap_cubehelix)</LINE>
	</SYNTAX>
      </PARA>

    </DESC>

    <QEXAMPLELIST>
      <QEXAMPLE>
	<SYNTAX>
	  <LINE>&pr; import chips_contrib.helix as helix</LINE>
	  <LINE>&pr; helix.load_colormap_cubehelix()</LINE>
	  <LINE>&pr; x = np.arange(-5, 5, 0.1)</LINE>
	  <LINE>&pr; xx, yy = np.meshgrid(x, x, sparse=True)</LINE>
	  <LINE>&pr; z = np.sin(xx**2 + yy**2) / (xx**2 + yy**2)</LINE>
	  <LINE>&pr; add_image(z, ['colormap', 'usercmap1'])</LINE>
	  <LINE>&pr; add_colorbar(0.5, 1.05)</LINE>
	  <LINE>&pr; hide_axis()</LINE>
	  <LINE>&pr; set_plot(['style', 'open'])</LINE>
	</SYNTAX>
        <DESC>
          <PARA>
	    The load_colormap_cubehelix call sets up the chips_usercmap1
	    slot with a colormap created using the default cubehelix settings. This is then 
	    used to display the image.
	  </PARA>
	</DESC>
      </QEXAMPLE>

      <QEXAMPLE>
	<SYNTAX>
	  <LINE>&pr; (r, g, b) = helix.get_cubehelix()</LINE>
	  <LINE>&pr; x = np.arange(r.size)</LINE>
	  <LINE>&pr; set_preference('curve.symbol.style', 'none')</LINE>
	  <LINE>&pr; add_curve(x, r, ['*.color', 'red'])</LINE>
	  <LINE>&pr; add_curve(x, g, ['*.color', 'green'])</LINE>
	  <LINE>&pr; add_curve(x, b, ['*.color', 'blue'])</LINE>
	  <LINE>&pr; add_line(0, 0, r.size-1, 1)</LINE>
	  <LINE>&pr; set_axis(['pad', 0])</LINE>
	</SYNTAX>
	<DESC>
	  <PARA>
	    The red, green, and blue components for the default cubehelix
	    color map are shown.
	  </PARA>
	</DESC>
      </QEXAMPLE>
    </QEXAMPLELIST>

    <ADESC title="Changes in the scripts 4.6.3 (March2014) release">
      <PARA>
	The start, hue, gamma, and nlev parameters were being ignored
	in both load_colormap_cubehelix() and get_cubehelix().
      </PARA>
    </ADESC>

    <ADESC title="Changes in the scripts 4.6.1 (December 2013) release">
      <PARA>
	The chips_contrib.helix module is new in this release.
      </PARA>
    </ADESC>

    <ADESC title="About Contributed Software">
      <PARA>
        This module is not an official part of the CIAO release but is
        made available as "contributed" software via the
        <HREF link="https://cxc.harvard.edu/ciao/download/scripts/">CIAO scripts page</HREF>.
        Please see this page for installation instructions.
      </PARA>
    </ADESC>

    <LASTMODIFIED>February 2014</LASTMODIFIED>
  </ENTRY>
</cxchelptopics>
