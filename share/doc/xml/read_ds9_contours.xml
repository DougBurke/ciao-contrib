<?xml version="1.0"?>
<!DOCTYPE cxchelptopics SYSTEM "CXCHelp.dtd" [
  <!ENTITY pr  '>>>'>
]>
<cxchelptopics>
  <ENTRY key="read_ds9_contours" context="contrib"
         refkeywords="read_ds9_contour read ds9 contours con contour *.con"
         seealsogroups="ds9.utils">

    <SYNOPSIS>
      Read in the contours from a ds9 *.con file with optional coordinate conversion.
    </SYNOPSIS>

    <SYNTAX>
      <LINE>(xs, ys) = read_ds9_contours(filename, coords=None, fromsys=None, tosys=None)</LINE>
    </SYNTAX>

    <DESC>
      <PARA>
	This routine reads in the contours from a DS9 *.con file
	and returns the x and y coordinates of each component as a
	separate numpy array. If the coords, fromsys and tosys arguments
	are given then they are used to convert the values to a
	different coordinate system (e.g. if the values were written out
	in WCS but you wish to use the sky system).
      </PARA>

      <PARA title="Loading the routine">
	The routine can be loaded into Python by saying:
      </PARA>
<VERBATIM>
from crates_contrib.utils import *
</VERBATIM>

      <PARA title="Coordinate conversion">
	To convert the coordinate values form the file then
	coords should be either the name of an image file or
	a crate containing an image and the fromsys and tosys
	arguments determine what systems to use:
      </PARA>
      <TABLE>
	<CAPTION>The fromsys and tosys arguments</CAPTION>
	<ROW><DATA>Value</DATA><DATA>Description</DATA></ROW>
	<ROW><DATA>"world" or "eqpos"</DATA><DATA>The WCS coordinate systems supported by CIAO</DATA></ROW>
	<ROW><DATA>"physical" or "sky"</DATA><DATA>The physical coordinate system</DATA></ROW>
	<ROW><DATA>"logical" or "image"</DATA><DATA>The logical coordinate system</DATA></ROW>
      </TABLE>
    </DESC>

    <QEXAMPLELIST>
      <QEXAMPLE>
	<SYNTAX>
	  <LINE>&pr; (xs, ys) = read_ds9_contours('ds9.con')</LINE>
	</SYNTAX>
	<DESC>
	  <PARA>
	    The contours from the file "ds9.con" are read into xs and ys
	    arrays.
	  </PARA>
	</DESC>
      </QEXAMPLE>

      <QEXAMPLE>
	<SYNTAX>
	  <LINE>&pr; (xs, ys) = read_ds9_contours("ds9.con", "img.fits", "world", "sky")</LINE>
	</SYNTAX>
	<DESC>
	  <PARA>
	    Here the contour coordinates are read in and then converted from
	    WCS to SKY coordinates using the coordinate axes in the 
	    image file img.fits.
	  </PARA>
	</DESC>
      </QEXAMPLE>

    </QEXAMPLELIST>

    <ADESC title="Notes">
      <PARA title="Coordinate-system support">
	The coordinate-transform code has been written and tested for use with images
	created by CIAO tools. Please
	let the
	<HREF link="https://cxc.harvard.edu/help/">CXC HelpDesk</HREF>
	know if it does not work for your image file(s).
      </PARA>
    </ADESC>

    <ADESC title="Changes in the scripts 4.5.2 (April 2013) release">
      <PARA>
	The routine now works when asked to convert between
	coordinate systems (this removes the "Input must be a 2D array"
	error message introduced with CIAO 4.5).
      </PARA>
    </ADESC>

    <BUGS>
      <PARA>
        See the
        <HREF link="https://cxc.harvard.edu/ciao/bugs/">bug
        pages</HREF>
        on the CIAO website for an up-to-date listing of known bugs.
      </PARA>
    </BUGS>
 
    <LASTMODIFIED>June 2019</LASTMODIFIED>

  </ENTRY>
</cxchelptopics>
