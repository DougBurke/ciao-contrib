<?xml version="1.0"?>
<!DOCTYPE cxchelptopics SYSTEM "CXCHelp.dtd" [
  <!ENTITY pr  'chips>'>
]>
<cxchelptopics>
  <ENTRY key="chips_pyplot" context="contrib" pkg="chips"
	 refkeywords="chips_contrib.pyplot pyplot matplotlib plt 
		      matlab emulate command commands
		      python"
	 displayseealsogroups=""
	 seealsogroups="">

    <SYNOPSIS>
      A basic matplotlib/pyplot-like interface to ChIPS
    </SYNOPSIS>

    <SYNTAX>
      <LINE>import chips_contrib.pyplot as plt</LINE>
      <LINE/>
      <LINE>See help(plt) for information on supported commands</LINE>
    </SYNTAX>

    <DESC>
      <PARA>
        This module provides a very basic pyplot interface
        to ChIPS, and is intended for those users who
        know the
        <HREF link="http://matplotlib.org/api/pyplot_api.html">matplotlib pyplot API</HREF>
        and want to do some simple plotting in ChIPS.
        It is not intended to be a faithful emulation of
        matplotlib, and many routines or capabilities are
        either partly or not supported.
        The module is provided as part of the
        <HREF link="http://cxc.harvard.edu/ciao/download/scripts/">CIAO contributed
        scripts</HREF> package.
      </PARA>

      <PARA title="Loading the routines">
        The module can be loaded into ChIPS, Sherpa or Python
	scripts by saying:
      </PARA>

<VERBATIM>
import chips_contrib.pyplot as plt
</VERBATIM>

      <PARA>
        Once the module has been loaded use the Python command
        help(plt) to find out what routines are supported.
      </PARA>

      <PARA>
        Routines from this module and ChIPS can be used together.
        For example, you can still use the ChIPS GUI to modify
        the visualizations you have created with commands from this
        module.
      </PARA>

    </DESC>

    <QEXAMPLELIST>
      <QEXAMPLE>
        <SYNTAX>
          <LINE>&pr; import chips_contrib.pyplot as plt</LINE>
          <LINE>&pr; x = np.arange(0, np.pi, 0.01)</LINE>
          <LINE>&pr; y = np.exp(-(x-2.3)**2/0.01)</LINE>
          <LINE>&pr; yimg = np.repeat(y.reshape(-1,y.size), 200, axis=0)</LINE>
          <LINE>&pr; print(yimg.shape)</LINE>
          <LINE>(200, 315)</LINE>
          <LINE>&pr; yrnd = np.random.normal(loc=0, scale=0.1, size=yimg.shape)</LINE>
          <LINE>&pr; yimg2 = yimg + yrnd</LINE>
          <LINE>&pr; plt.subplot(211)</LINE>
          <LINE>&pr; plt.imshow(yimg2, origin='lower')</LINE>
          <LINE>&pr; plt.subplot(212)</LINE>
          <LINE>&pr; plt.plot(yimg2[100,:])</LINE>
          <LINE>&pr; plt.plot(yimg2.mean(axis=0), lw=2)</LINE>
	</SYNTAX>
        <DESC>
          <PARA>
            Here we show an example of plotting an image and then profiles
            of the image below it. The image is created from a one-dimensional
            gaussian (the y array) that is replicated on each row to form
            an image (yimg), and then normally-distributed noise is added
            to form yimg2. This 2D array is then displayed using routines
            from this module.
	  </PARA>
	</DESC>
      </QEXAMPLE>
    </QEXAMPLELIST>

    <ADESC title="Changes in the scripts 4.5.4 (August 2013) release">
      <PARA>
	The chips_contrib.pyplot module is new in this release.
      </PARA>
    </ADESC>

    <ADESC title="About Contributed Software">
      <PARA>
        This script is not an official part of the CIAO release but is
        made available as "contributed" software via the
        <HREF link="http://cxc.harvard.edu/ciao/download/scripts/">CIAO scripts page</HREF>.
        Please see this page for installation instructions - such as how to
        ensure that the parameter file is available.
      </PARA>
    </ADESC>

    <BUGS>
      <PARA>
        See the
        <HREF link="http://cxc.harvard.edu/ciao/bugs/">bugs pages</HREF>
	on the CIAO website for an up-to-date listing of known bugs.
      </PARA>
    </BUGS>

    <LASTMODIFIED>August 2013</LASTMODIFIED>
  </ENTRY>
</cxchelptopics>
